#include<bits/stdc++.h>
using namespace std;

string s;int l;
long int dp[13][30000][3];
inline long long int rek(int idx,int sum,int tight)
{
	if(idx>=l) return sum;
	if(dp[idx][sum][tight]!=-1 and tight==0) return dp[idx][sum][tight];
	long long int ret=0;
	int k,i,newtight,dig;
	dig=(int)(s[idx]-'0');
	k=(tight)?dig:9;
	for(i=0;i<=k;++i)
	{
	  newtight=(i==dig)?tight:0;
	  ret+=rek(idx+1,sum+i,newtight);
	}
	if(!tight) dp[idx][sum][tight]=ret;
	
	return ret;
}



int main()
{
	int a,b,i,j,k;
//	memset(dp,-1,sizeof(dp));
while(1)
{
scanf("%d%d",&b,&a);
if(a==-1 and b==-1) break;
long long int val1,val2;
memset(dp,-1,sizeof(dp));
--b;
stringstream ss;
ss<<a;
s=ss.str();
l=s.size();
val1=rek(0,0,1);
memset(dp,-1,sizeof(dp));
stringstream sb;
sb<<b;
s=sb.str();
l=s.size();
val2=rek(0,0,1);
cout<<val1-val2<<endl;

	
}	
	
	return 0;
}
