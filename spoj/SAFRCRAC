#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef unsigned long long int ull;
typedef  pair<int,int>P;

#define mm(xx) memset(xx,0,sizeof(xx))
#define pb push_back

#define scd(xx) scanf("%d",&xx)
#define scl(xx) scanf("%lld",&xx)
#define scl2(xx,uu) scanf("%lld%lld",&xx,&uu);
#define scd2(xx,uu) scanf("%d%d",&xx,&uu)
#define rep(xx,uu,ee) for(xx=uu;xx<ee;++xx)

//  int dx[]={1,0,-1,0};int dy[]={0,1,0,-1};                           //4 directions
//  int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};      //8 directions
//  int dx[]={2,1,-1,-2,-2,-1,1,2}; int dy[]={1,2,2,1,-1,-2,-2,-1};       //knight's move

#define SIZ 100005
#define INF 999999
#define T int t;for(scanf("%d",&t);t--;)
#define mod 1000000007
#define SYNC  ios_base::sync_with_stdio(false);  cin.tie(NULL);
ll dp[SIZ][11];
inline void rek()
{
	ll val,i,j;
	for(i=0;i<=9;++i) dp[1][i]=1;
	for(i=2;i<SIZ;++i)
	{
	  for(j=0;j<=9;++j)
	  {
	  	if(!j) dp[i][j]=dp[i-1][7]%mod;
	  	else if(j==1)
	  	     dp[i][j]=(dp[i-1][2]%mod+dp[i-1][4]%mod)%mod;
	   else if(j==2)
	  	     dp[i][j]=(dp[i-1][1]%mod+dp[i-1][5]%mod+dp[i-1][3]%mod)%mod;
	  	else if(j==3)
	  	     dp[i][j]=(dp[i-1][2]%mod+dp[i-1][6]%mod)%mod;  
	   else if(j==4)
	  	     dp[i][j]=(dp[i-1][1]%mod+dp[i-1][5]%mod+dp[i-1][7]%mod)%mod;		      
	    else if(j==5)
	  	     dp[i][j]=(dp[i-1][2]%mod+dp[i-1][4]%mod+dp[i-1][6]%mod+dp[i-1][8]%mod)%mod;
	   else if(j==6)
	  	     dp[i][j]=(dp[i-1][3]%mod+dp[i-1][5]%mod+dp[i-1][9]%mod)%mod;
	  	else if(j==7)
	  	     dp[i][j]=(dp[i-1][4]%mod+dp[i-1][8]%mod+dp[i-1][0]%mod)%mod;   
	   else if(j==8)
	  	     dp[i][j]=(dp[i-1][7]%mod+dp[i-1][5]%mod+dp[i-1][9]%mod)%mod;
	   else if(j==9)
	  	     dp[i][j]=(dp[i-1][8]%mod+dp[i-1][6]%mod)%mod;		   		     
	  
	  }
	}
	
}
int main()
{
	rek();
	int n,i;
	T{
	scd(n);
	ll val=0;
	for(i=0;i<=9;++i)
	val=(val%mod+dp[n][i]%mod)%mod;
	cout<<val<<endl;
	
}
	
	return 0;
}
