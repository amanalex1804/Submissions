#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define INF 1<<28

int n,b,msk,m;
ll dp[1<<12][105]; ll mat[105][105];
vector<pair<ll,ll> >letter;
void reset(){
	msk=0;
	letter.clear();
	memset(dp,-1,sizeof(dp));
	for(int i=0;i<n+5;++i)
	for(int j=0;j<n+5;++j)
	mat[i][j]=INF;
	for(int i=1;i<=n;++i) mat[i][i]=0;
}
void floyd(){
	
	for(int k=1;k<=n;++k)
	for(int i=1;i<=n;++i)
	for(int j=1;j<=n;++j)	
	mat[i][j]=min(mat[i][j],mat[i][k]+mat[k][j]);
	
}

ll tsp(int mask,int prev){
	
	if(dp[mask][prev]!=-1) return dp[mask][prev];
	bool flag=false;
	ll ans=INF;ll cost;
//	cout<<mask<<" "<<prev<<endl;
	for(int i=0;i<msk;++i){
		
		   if(((1<<i)&mask)==0){
		   	  cost=mat[prev][letter[i].first]+mat[letter[i].first][letter[i].second]+tsp((1<<i)|mask,letter[i].second);
		   	  flag=true;
		   	  ans=min(ans,cost);
		   }
	}
	
	if(flag) return dp[mask][prev]=ans;
	else return dp[mask][prev]=mat[prev][b];
	
}


int main(){
ios_base::sync_with_stdio(false);
 cin.tie(NULL);

int t;cin>>t;
while(t--){
	int x,y,c;
	cin>>n>>m>>b;
	reset();
	
	for(int i=0;i<m;++i){
		cin>>x>>y>>c;
		mat[x][y]=c;
		mat[y][x]=c;
	}
	floyd();
	int q;
	cin>>q;
	
	for(int i=0;i<q;++i){
		cin>>x>>y>>c;
		while(c--) letter.push_back({x,y});
	}
	msk=letter.size();
	ll a=tsp(0,b);
	cout<<a<<"\n";
	
	
	
}	
	
	return 0;
}
