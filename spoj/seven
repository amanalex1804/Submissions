#include<bits/stdc++.h>
using namespace std;
typedef long int ll;
#define sz 100005
int bit[sz];
vector<int>gr[sz];
int A[sz],B[sz]; bool vis[sz];
ll op,sum;int n;
inline void pre(){
	
	for(int i=1;i<sz;++i){
		int cnt=0;
		int lim=log2(i)+1;
		for(int j=0;j<lim+2;++j){
			if((1LL<<j)&i) cnt=(cnt+1)%2;
		}
		bit[i]=cnt;
	}	
}
void reset(){
	op=0,sum=0;
	for(int i=0;i<n+5;++i) gr[i].clear(),vis[i]=false;
}
void dfs(int src,ll x0,ll x1){
	vis[src]=true;
	if(bit[src]==0){
		ll temp=A[src]+x0;
		if(temp!=B[src]){
			++op;
			sum+=(B[src]-temp);
			x0+=(B[src]-temp);
		}	
	}
	if(bit[src]==1){
			ll temp=A[src]+x1;
		if(temp!=B[src]){
			++op;
			sum+=(B[src]-temp);
			x1+=(B[src]-temp);
		}	
	}
	for(int i=0;i<gr[src].size();++i)
	if(!vis[gr[src][i]]) dfs(gr[src][i],x0,x1);
		
	
	
}
int main(){
	ios_base::sync_with_stdio(false); cin.tie(NULL);
    pre();
	int t;cin>>t;
	while(t--){
		cin>>n;
		reset();
		for(int i=0,x,y;i<n-1;++i){
			cin>>x>>y;
			gr[x].push_back(y);
			gr[y].push_back(x);
		}
		for(int i=1;i<=n;++i) cin>>A[i];
		for(int i=1;i<=n;++i) cin>>B[i];
		dfs(1,0,0);
		cout<<op<<" "<<sum<<"\n";
		
	}
	
	return 0;
}
