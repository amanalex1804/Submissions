#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define sz 100005
int parent[sz];
int rek(int x){
	while(parent[x]!=x and parent[x]!=parent[parent[x]]) parent[x]=parent[parent[x]];
	return parent[x];
}
int main(){
	
//	ios_base::sync_with_stdio(false); cin.tie(NULL);
	int t;cin>>t;
	while(t--){
		int n,m;
		cin>>n>>m;
		int cit[n+5];
		for(int i=0;i<n+5;++i) parent[i]=i;
		for(int i=1;i<=n;++i) cin>>cit[i];
		pair<ll,pair<int,int> >p[m+5];
	
		for(int i=0;i<m;++i) 
	     cin>>p[i].second.first>>p[i].second.second>>p[i].first;
	     
        	 
		sort(p,p+m);
		ll ans=0;
		for(int i=0;i<m;++i){
			int x=p[i].second.first;
			int y=p[i].second.second;
			if(x==y) continue;
			int x1=rek(x);
			int y1=rek(y);
			if(x1==y1) continue;
			if(cit[x1]==1 and cit[y1]==1) continue;
			if(cit[x1]==1 and cit[y1]==0){
				ans+=p[i].first;
				parent[y1]=x1;
			}
			if(cit[x1]==0 and cit[y1]==1){
				ans+=p[i].first;
				parent[x1]=y1;
			}
			if(cit[x1]==0 and cit[y1]==0){
				parent[x1]=y1;
				ans+=p[i].first;
			}
			
		}
		bool flag=true;
		for(int i=1;i<=n;++i){
			if(cit[i]==0){
				int x=rek(i);
				if(cit[x]!=1) {
					flag=false;
					break;
				}
			}
		}
		if(!flag) cout<<"impossible\n";
		else cout<<ans<<"\n";
	}
	
	
	return 0;
}
