#include<bits/stdc++.h>
using namespace std;
typedef long int ll;

int main(){
	 ios_base::sync_with_stdio(false); cin.tie(NULL);
	int t;cin>>t;
	while(t--){
		int n;
		cin>>n;
		string s;
		map<ll,string>hash;
		map<ll,string>::iterator it1;
		map<string,ll>vis;
		map<string,ll>::iterator it2;
		while(n--){
			cin>>s;
			int l=(int)s.size();
			int pos=-1;
			for(int i=0;i<l;++i){
				if(s[i]==':'){
					pos=i;
					break;
				}
			}
			
			string op=s.substr(0,pos);
			string s1=s.substr(pos+1,l-pos-1);
			
			
			ll has=0;
			for(int i=0;i<(int)s1.size();++i)
				has+=((int)s1[i])*(i+1);
			has=19*has;
			has%=101;
			if(op=="ADD"){
			if(vis.count(s1)) continue;
			if(hash.count(has)==0) hash.insert({has,s1}),vis.insert({s1,has});
			else{
				int cnt=1;
				while(cnt<20){
					ll nw=(((cnt*cnt)%101)+((23*cnt)%101))%101;
					nw=(has+nw)%101;
					if(hash.count(nw)==0){
						hash.insert({nw,s1});
						vis.insert({s1,nw});
						break;
					}
					++cnt;
					
				}
			}
			
			
			
		    }
		    else{
		    	if(vis.count(s1)==0) continue;
		    	it1=hash.find(vis[s1]);
		    	hash.erase(it1);
		    	
		    
		    	
		    	it2=vis.find(s1);
		    	vis.erase(it2);
		    	
		    	
		    	
			}
			
		}
		cout<<hash.size()<<"\n";
		for(it1=hash.begin();it1!=hash.end();++it1){
			pair<ll,string>pi=*it1;
			cout<<pi.first<<":"<<pi.second<<"\n";
		}
	}
	
	
	return 0;
}
