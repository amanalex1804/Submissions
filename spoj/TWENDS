#include<bits/stdc++.h>
using namespace std;
#define long long int
 int dp[3000][3000],A[2000];
 int twend(int left,int right,int cnt)
 {
     if(dp[left][right]!=0 or left>right) return dp[left][right]; //check here for left>right
     if(cnt==1)
     {
         if(A[left]==A[right])
         return dp[left][right]=A[left]-twend(left+1,right,(cnt+1)%2);
         else
         {
             if(A[left]>A[right]) return dp[left][right]=A[left]-twend(left+1,right,(cnt+1)%2);
             else return dp[left][right]=A[right]-twend(left,right-1,(cnt+1)%2);
         }
     }
     else if(cnt==0) return dp[left][right]=max(A[left]-twend(left+1,right,(cnt+1)%2),A[right]-twend(left,right-1,(cnt+1)%2)); }
int main()
{
    int i,j,n,c=0;
    while(1)
    {
        ++c;
        scanf("%d",&n);
        if(!n) break;
        memset(dp,0,sizeof(dp));
        for(i=0;i<n;++i) scanf("%d",&A[i]);
        twend(0,n-1,0);
printf("In game %d, the greedy strategy might lose by as many as %d points.\n",c,dp[0][n-1]); }
    return 0;
}
