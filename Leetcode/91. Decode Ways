class Solution {
public:
    int fn(int idx, string& s, int *dp) {
        if(idx>=(int)s.size()) {
            return 1;
        }
        if(s[idx] == '0') {
            return 0;
        }

        if(dp[idx]!=-1) {
            return dp[idx];
        }

        int v1 = fn(idx+1, s, dp); 
        int v2 = 0;
        if(idx+1<(int)s.size()){
             int tmp =s[idx] - '0';
             int tmp1 = s[idx+1] - '0';
             int tt = (tmp*10) + tmp1;
             if(1<=tt and tt<=26) {
                 v2 = fn(idx+2, s, dp);
             }
        }

        return dp[idx] = v1 + v2;
 

    }
    int numDecodings(string s) {
        if(s[0]=='0'){
            return 0;
        }
        int l = s.size()+1;
        int *dp = new int[l+1];
        for(int i=0;i<l;++i) dp[i] = -1;

        return fn(0, s, dp);
   


        
    }
};
