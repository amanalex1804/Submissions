class Solution {
public:
    int findParent(int node, int *parent) {
        while(parent[node]!=node) {
            node = parent[node];
        }
        return node;
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        
        int n = isConnected.size();
        int *parent = new int[n+2];
        for(int i=0;i<n;++i) parent[i] = i;


        for(int i=0;i<n;++i) {
            for(int j=0;j<n;++j) {
                if(i!=j and isConnected[i][j]==1) {
                    int par1 = findParent(i, parent);
                    int par2 = findParent(j, parent);
                    if(par1!=par2) {
                      parent[par1] = par2;
                    }
                }
            }
        }

        set<int>ans;
        for(int i=0;i<n;++i) {
            ans.insert(findParent(i, parent));
        }

        return ans.size();



    } 
};
