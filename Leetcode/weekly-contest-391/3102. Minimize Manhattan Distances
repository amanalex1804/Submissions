class Solution {
public:
    typedef pair<int,int> pp;
    int minimumDistance(vector<vector<int>>& p) {
        set<pp>x,y;
        int l = (int)p.size();
        for(int i=0;i<l;++i) {
            int x1 = p[i][0]+p[i][1];
            int y1 = p[i][0]-p[i][1];
            x.insert({x1, i});
            y.insert({y1, i});
        }
        int ans = INT_MAX;
        for(int i=0;i<l;++i) {
            int x1 = p[i][0]+p[i][1];
            int y1 = p[i][0]-p[i][1];
            x.erase({x1, i});
            y.erase({y1, i});
            
            auto [x_min, i_mn] = *x.begin();
            auto [x_max, i_mx] = *x.rbegin();
            
            auto [y_min, i_ymn] = *y.begin();
            auto [y_max, i_ymx] = *y.rbegin();
            
            ans = min(ans, max(x_max-x_min, y_max-y_min));
            x.insert({x1, i});
            y.insert({y1, i});
            
        }
        
        return ans;
    }
};
