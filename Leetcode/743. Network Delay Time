class Solution {
public:
    int networkDelayTime(vector<vector<int>>& times, int n, int k) {

        int dis[n+1];
        for(int i=0;i<=n;++i) dis[i] = INT_MAX;

        dis[k] = 0;
        for(int i=1;i<=n;++i) {

            for(int j=0;j<(int)times.size();++j) {
                vector<int>tmp = times[j];
                int src = tmp[0];
                int des = tmp[1];
                int wt = tmp[2];

                if(dis[src]!=INT_MAX and dis[src]+wt<dis[des]) {
                    dis[des] = dis[src] + wt;
                }
            }
        }

        int ans = -1;
        for(int i=1;i<=n;++i) {
            if(dis[i]==INT_MAX) {
                return -1;
            }
            ans = max(ans, dis[i]);
        }

        return ans;
        
    }
};
