class Solution {
public:

    int getIncreased(vector<int>&v1, vector<int>&v2) {
        int l = (int)v1.size();

 

        int diff = v2[0]-v1[0];
        for(int i=1;i<l;++i) {
            if(v2[i]-v1[i]!=diff) {
                return INT_MAX;
            }
        }
        return diff;
    }
    int minimumAddedInteger(vector<int>& nums1, vector<int>& nums2) {

        int l = (int)nums1.size();
        int ans = INT_MAX;
         vector<int>v;

         sort(nums1.begin(), nums1.end());
         sort(nums2.begin(), nums2.end());


        for(int i=0;i<l;++i) {
            for(int j=0;j<l;++j) {
                if(j==i) {
                    continue;
                }

                for(int p=0;p<l;++p){
                    if(p!=i and p!=j) {
                        v.push_back(nums1[p]);
                    }
                }

                // for(int k=0;k<(int)v.size();++k) {
                //     cout<<v[k]<<" ";
                // }
                // cout<<endl;

               ans = min(ans, getIncreased(v, nums2));
               v.clear();
            }
        }

        return ans;
        

        
    }
};
