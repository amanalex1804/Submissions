/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {

        ListNode* head = NULL;
        ListNode* list3 = NULL;
        int carry = 0;
        
        while(l1!=NULL and l2!=NULL){
            int sum = l1->val + l2->val + carry;
            ListNode* curr = new ListNode(sum%10);
            carry = sum/10;

            if(head==NULL){
                head = curr;
                list3 = curr;
            }else{
                list3->next = curr;
                list3 = curr;
            }

            l1= l1->next ;
            l2 = l2->next ;
        }

        while(l1!=NULL){
            int sum = l1->val + carry;
            ListNode* curr = new ListNode(sum%10);
            carry = sum/10;

            if(head==NULL){
                head = curr;
                list3 = curr;
            }else{
                list3->next = curr;
                list3 = curr;
            }

            l1 = l1->next;
        }

        while(l2!=NULL){
            int sum = l2->val + carry;
            ListNode* curr = new ListNode(sum%10);
            carry = sum/10;

            if(head==NULL){
                head = curr;
                list3 = curr;
            }else{
                list3->next = curr;
                list3 = curr;
            }

            l2 = l2->next;
        }

        if(carry>0){
            ListNode* curr = new ListNode(carry);
             if(head==NULL){
                head = curr;
                list3 = curr;
            }else{
                list3->next = curr;
                list3 = curr;
            }

        }

        return head;


    }
};
