/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {

        int szA = getSize(headA);
        int szB = getSize(headB);

        int diff = (abs)(szA-szB);

        if(szA>szB){

            while(diff>0){
                headA = headA->next;
                --diff;
            }

        }else{
            while(diff>0){
                headB = headB->next;
                --diff;
            }
        }

        
        while(headA!=NULL and headB!=NULL){
            if(headA==headB){
                return headA;
            }
            headA = headA->next;
            headB = headB->next;
        }
        return NULL;
        
    }

    int getSize(ListNode *head){
        int sz = 0;

        while(head!=NULL){
            ++sz;
            head = head->next;
        }

        return sz;
    }

};
