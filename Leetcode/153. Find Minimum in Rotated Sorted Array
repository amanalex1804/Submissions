class Solution {
public:
    int findMin(vector<int>& A) {

        if(A[0]<A.back()) return A[0];
        int low = 0, high = A.size()-1, mid = high/2;

        while(high-low>0){
            mid = low + (high-low)/2;
            if(A[low]<=A[mid] and A[mid]<=A[high]) break;

            // mid is still in the first sequence
            if(A[low]<=A[mid]){
                low = mid+1;
            } else if(A[mid]<=A[high]) { // second sequence
                high = mid;
            }
        }

        return min(A[mid], min(A[low], A[high]));
        
    }
};
