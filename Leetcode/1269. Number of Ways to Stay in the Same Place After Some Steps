class Solution {
public:
int mod = 1000000007;

int fn(int idx, int cnt,  int len, int steps, int **dp) {

    if(idx<0 or idx>=len) {
        return 0;
    }
    if(cnt>=steps) {
        if(idx==0) {
            return 1;
        }
         return 0;
    }

    if(dp[idx][cnt]!=-1) return dp[idx][cnt];

    int val1 = fn(idx, cnt+1, len, steps, dp)%mod; // for 0


    int val2 = fn(idx+1, cnt+1, len, steps, dp)% mod; // for right

    int val3 = fn(idx-1, cnt+1, len, steps, dp)%mod; // for left


    int ans = val1%mod;
    ans = ((ans%mod) + (val2%mod))%mod;
    ans = ((ans%mod) + (val3%mod))%mod;

    cout<<idx<< " "<<cnt<<" "<<ans<<endl;

    return dp[idx][cnt]=ans;
}

    int numWays(int steps, int arrLen) {

            vector<int>vv;
            int *dp[510];
            for(int i=0;i<510;++i) dp[i] = new int[510];

            for(int i=0;i<510;++i)
            for(int j=0;j<510;++j)
            dp[i][j] = -1;

        return fn(0, 0, arrLen, steps, dp);
        
    }
};
