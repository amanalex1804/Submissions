class Solution {
public:

    int dx[4] = {-1, 1, 0, 0};
    int dy[4] = {0, 0, -1, 1};

    bool isInside(int i, int j, int row, int col){
        if(0<=i and i<row and 0<=j and j<col){
            return true;
        }
        return false;
    }

    void upd(vector<vector<char>>& board, vector<pair<int,int>>v){

        queue<pair<int,int> >q;
        for(int i=0;i<(int)v.size();++i) q.push(v[i]);
        int row = board.size();
        int col = board[0].size();

        while(!q.empty()){
            pair<int,int>tmp = q.front(); q.pop();
            board[tmp.first][tmp.second] = '#';

            for(int i=0;i<4;++i){
                int x1 = tmp.first + dx[i];
                int y1 = tmp.second + dy[i];
                if(isInside(x1, y1, row, col) and board[x1][y1]=='O'){
                    q.push({x1, y1});
                }

            }

        }
    }

    vector<pair<int,int> > getZ(vector<vector<char>>& board, int x, bool isRow){

        vector<pair<int,int> > ans;
        if(isRow){
            for(int i=0;i<(int)board[0].size();++i){
                if(board[x][i]=='O'){
                    ans.push_back({x,i});
                }
            }
        } else {
            for(int i=0;i<(int)board.size();++i){
                if(board[i][x]=='O'){
                    ans.push_back({i,x});
                }
            }
        }
        return ans;
    }

    void solve(vector<vector<char>>& board) {
        int row = board.size();
        int col = board[0].size();

        // first row
        vector<pair<int,int> > v1 = getZ(board, 0, true);
        upd(board, v1);

        // last row
        vector<pair<int,int> > v2 = getZ(board, row-1, true);
        upd(board, v2);

         // first col
        vector<pair<int,int> > v3 = getZ(board, 0, false);
        upd(board, v3);

        // last col
        vector<pair<int,int> > v4 = getZ(board, col-1, false);
        upd(board, v4);

        for(int i=0;i<row;++i){
            for(int j=0;j<col;++j){
                if(board[i][j] == 'O'){
                    board[i][j] = 'X';
                } else if (board[i][j] == '#') {
                    board[i][j] = 'O';
                }
            }
        }


        
    }
};
