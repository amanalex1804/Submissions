class Solution {
public:
    bool fn(vector<int>nums, int threshold, int k) {

        int curr = 0, div = 1, i = 0, l = (int)nums.size();

        for(int i=0;i<l;++i) {
            curr+=nums[i];
            if(curr>threshold) {
                curr = nums[i];
                ++div;
                if(div>k) {
                    return false;
                }
            }
        }
        return true;


    }
    int splitArray(vector<int>& nums, int k) {

        int low = 0, high = 0;
        for(int i=0;i<(int)nums.size();++i) {
            low = max(nums[i], low);
            high+=nums[i];
        }

        while(low<high) {
            int mid = low + (high-low)/2;
            if(fn(nums, mid, k)) {
                high = mid;
            } else {
                low = mid+1;
            }
        }
        return low;
        
    }
};
