class Solution {
public:
    int dx[2] = {0, 1};
    int dy[2] = {1, 0};
    int minPathSum(vector<vector<int>>& grid) {

        int row = (int) grid.size();
        int col = (int) grid[0].size();

        int dp[row+1][col+1];
        dp[0][0] = grid[0][0];

        for(int i=1;i<col;++i) dp[0][i] = dp[0][i-1] + grid[0][i];
        for(int i=1;i<row;++i) dp[i][0] = dp[i-1][0] + grid[i][0];

        for(int i=1;i<row;++i){
            for(int j=1;j<col;++j){
                int x1 = i - 1; //up
                int y1 = j - 1; // left
                dp[i][j] = grid[i][j] + min(dp[x1][j], dp[i][y1]);
            }
        }

        return dp[row-1][col-1];

        
    }
};
