class Solution {

    public int maxWidthRamp(int[] nums) {

        HashMap<Integer, Integer> minIndex = new HashMap<>();
        int l = nums.length;
        Set<Integer> disNums = new TreeSet<>();

        for(int i=0;i<l;++i) {
            if(minIndex.containsKey(nums[i])) {
                minIndex.put(nums[i], Math.min(i, minIndex.get(nums[i])));
            } else {
                minIndex.put(nums[i], i);
            }
            disNums.add(nums[i]);
        }
        int mn = Integer.MAX_VALUE;
        for(int elem : disNums) {
            mn = Math.min(mn, minIndex.get(elem));
            minIndex.put(elem, mn);
        }

        int ans = Integer.MIN_VALUE;

        for(int i=l-1;i>=0;--i) {
            ans = Math.max(ans, i-minIndex.get(nums[i]));
        }
        return ans;
        
    }
}
