class Solution {
public:
    int dp[2501][2501];
    int fn(int idx, int last, vector<int>&nums) {
        if(idx>=(int)nums.size()){
            return 0;
        }

        if(last!=-1 and dp[idx][last]!=-1){
            return dp[idx][last];
        }

        int val1 = 0, val2 =0;

        if(last == -1 or nums[last] < nums[idx]) {
            val1 = 1 + fn(idx+1, idx, nums);
        }

        val2 = fn(idx+1, last, nums);
        int ans = max(val1, val2);
        if(last!=-1){
            dp[idx][last] = ans;
        }
        return  ans;
    }
    int lengthOfLIS(vector<int>& nums) {

        int l = (int)nums.size();
        for(int i=0;i<=l;++i) { 
            for(int j=0;j<=l;++j){
                dp[i][j] = -1;
            }
        }

        return fn(0, -1, nums);
        
    }
};
