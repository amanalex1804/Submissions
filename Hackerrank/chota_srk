#include<bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define siz 100005
typedef  long long int ll;
typedef pair<int,int> P;
int vis[siz];
vector<P>gr[siz];
inline int add(ll x,ll y)
{
    ll z=x+y;
    if(z>=mod)
        z-=mod;
    return z;
}
inline ll mult(ll x,ll y){
	ll res=((x%mod)*(y%mod))%mod;
	return res;
}

inline ll prim(){
	
	priority_queue<P>Q;
	Q.push({0,1});
	P p;
	ll node,ver,d,dd,ans=0;
	while(!Q.empty()){
		p=Q.top();Q.pop();
		node=p.second;
		d=-1*p.first;
	
		if(vis[node]) continue;
		ans=add(ans,d);
		
		vis[node]=1;
		for(int i=0;i<gr[node].size();++i){
			ver=gr[node][i].first;
			dd=gr[node][i].second;
	
		   if(!vis[ver]) Q.push({(-1)*dd,ver});
			
			
		}
	
		
		
		
	}
		return ans%mod;
	
}
int main(){
//	ios_base::sync_with_stdio(false);
//	cin.tie(NULL);


  int i,n,t,j;
  
  cin>>t;
  while(t--){
  	cin>>n;
  	ll A[n+5],R[n+5];
  	for(i=1;i<=n;++i){
  		gr[i].clear();
  		vis[i]=0;
  		cin>>A[i];
	  }
	  for(i=1;i<=n;++i) cin>>R[i];
	  
	  for(i=1;i<=n;++i){
	  	for(j=1;j<=n;++j){
	  		if(i==j) continue;
	  		gr[i].push_back({j,(A[i]*R[j])});
	  		gr[i].push_back({j,(R[i]*A[j])});
		  }
	  }
  	
  	 ll ans=prim();
  	 cout<<ans<<"\n";
  	
  }

	
	return 0;
}
