
#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef  pair<int,int>P;
typedef pair<int,pair<int,int> >P1;
typedef pair<pair<int,int>,pair<int,int> >P11;


#define rep(xx,uu,ee) for(xx=uu;xx<ee;++xx)
#define mm(xx) memset(xx,0,sizeof(xx))
#define F first
#define S second
#define SF second.first
#define SS second.second
#define FF first.first
#define FS first.second
#define pb push_back

#define SYNC ios::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define scd(xx) scanf("%d",&xx)

#define scl2(xx,uu) scanf("%lld%lld",&xx,&uu);
#define scd2(xx,uu) scanf("%d%d",&xx,&uu)
#define rep(xx,uu,ee) for(xx=uu;xx<ee;++xx)

//  int dx[]={1,0,-1,0};int dy[]={0,1,0,-1};                           //4 directions
//  int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};      //8 directions
//  int dx[]={2,1,-1,-2,-2,-1,1,2}; int dy[]={1,2,2,1,-1,-2,-2,-1};       //knight's move
//  int dx[]={-1,-1,0,1,1,1,0}; int dy[]={-1,1,2,1,-1,-2};                //hexagonally move
// pos=lower_bound(v.begin(), v.end(), data) - v.begin();                  // binary search position(index =0)

#define SIZ 4000001
#define SIZ1 1000005
#define INF 999999

#define T int t;for(scanf("%d",&t);t--;)
#define mod 1000000007
#define scl(xx) scanf("%lld",&xx)
#define pra(xx) printf("%d ",xx)
#define prs(xx) printf("xx\n")
#define bs(XX,xx) binary_search(XX.begin(), XX.end(),xx)

ll prim[SIZ1],chenn[SIZ1];                
void sieve()
{
	ll i,j;prim[1]=1;
	for(i=4;i<SIZ1;i+=2) prim[i]=2;
	for(i=3;i<SIZ1;i+=2)
	{
		if(!prim[i]){
		for(j=2*i;j<SIZ1;j+=i) 
		  prim[j]=i;
      	}
	}

		
}

void chen()
{
    ll i,val;chenn[1]=1;
    rep(i,2,SIZ1-4)
    {
    	if(!prim[i]){
        if(prim[i+2]==0) chenn[i]=1;
        else 
        {
        if(i+2<SIZ1) val=prim[i+2];
         val=(i+2)/val;
            if(!prim[val]) chenn[i]=1;
        }
    }
    }
    rep(i,2,SIZ1)
    {
        chenn[i]+=chenn[i-1];
    }
    
}
int main()
{
	sieve();chen();
T{
ll l,r,i,cnt;cnt=0;
cin>>l>>r;

cout<<endl;
if(l==1) cout<<chenn[r]-chenn[l]<<endl;
 else   cout<<chenn[r]-chenn[l-1]<<endl;
}

   return 0;
}











/*

explanation ?

*/
