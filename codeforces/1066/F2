#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef long int li;
typedef pair<li,li> pi;
bool comp(const pi &x,const pi &y){
	if(max(x.first,x.second)>=max(y.first,y.second)) return false;
	return true;
}
bool cmp(const pi &x,const pi &y){
//	cout<<" ok\n"<<x.first<<" "<<x.second<<endl;
	if(x.first==y.first) return x.second>y.second;
	return x.first<y.first;
}
int main(){
	int n;cin>>n;
	pi p[n+5];
    ll maxn=999999999999999999LL;
	vector<pi>gr[n+5];
	for(int i=0,x,y;i<n;++i){
		cin>>x>>y;
		p[i].first=x;
		p[i].second=y;		
	}	
	sort(p,p+n,comp);
    int lv=0,last=-1;
    int i=0;
    gr[lv].push_back({0,0});
    gr[lv].push_back({0,0});
    while(i<n){
    	if(max(p[i].first,p[i].second)==last){
    		gr[lv].push_back(p[i]);
		}
		else{
			++lv;
			gr[lv].push_back(p[i]);
			last=max(p[i].first,p[i].second);
		}
		++i;
	}
	ll dp[lv+2][2];
	for(int i=0;i<lv+1;++i)
	for(int j=0;j<=1;++j)
	dp[i][j]=maxn;
	
	for(int i=1;i<=lv;++i){
		//cout<<" lever "<<i<<": \n";
		sort(gr[i].begin(),gr[i].end(),cmp);
		//for(int j=0;j<(int)gr[i].size();++j) cout<<gr[i][j].first<<" "<<gr[i][j].second<<endl;
	}
	dp[0][0]=0;
	dp[0][1]=0;
	for(int i=1;i<=lv;++i){
		
		ll dis=0;
		for(int j=1;j<(int)gr[i].size();++j){
			pi p2=gr[i][j];
			pi p1=gr[i][j-1];
			dis+=abs(p2.first-p1.first)+abs(p2.second-p1.second);
		}
	
			pi prev1=gr[i-1][0];
			pi prev2=gr[i-1].back();
			dp[i][0]=min(dp[i][0],dp[i-1][0]+abs(prev1.first-gr[i].back().first)+abs(prev1.second-gr[i].back().second)+dis);
			dp[i][0]=min(dp[i][0],dp[i-1][1]+abs(prev2.first-gr[i].back().first)+abs(prev2.second-gr[i].back().second)+dis);
			dp[i][1]=min(dp[i][1],dp[i-1][0]+abs(prev1.first-gr[i][0].first)+abs(prev1.second-gr[i][0].second)+dis);
			dp[i][1]=min(dp[i][1],dp[i-1][1]+abs(prev2.first-gr[i][0].first)+abs(prev2.second-gr[i][0].second)+dis);
		
	}
	cout<<min(dp[lv][0],dp[lv][1]);
	
	
	
	return 0;
}
