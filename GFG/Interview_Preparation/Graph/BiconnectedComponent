#include<bits/stdc++.h>
using namespace std;

void dfs(int src,int &cnt,vector<vector<int> >&gr,bool vis[]){
    vis[src] = true;
    ++cnt;
    for(int i=0;i<(int)gr[src].size();++i)
    if(!vis[gr[src][i]]) dfs(gr[src][i],cnt,gr,vis);
}

int main()
 {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
	int t;
	cin>>t;

	while(t--){
	    int n,m;cin>>n>>m;
	    vector<vector<int> > gr(n+1);
	    for(int i=0,x,y;i<m;++i){
	        cin>>x>>y;
	        gr[x].push_back(y);
	        gr[y].push_back(x);
	    }
	    bool vis[n+1],flag = true;
	    int src,cnt;
	    
	    for(int i=0;i<n;++i){
	        for(int j=0;j<n;++j) vis[j] = false;
	        cnt = 0; src = 0;
	        if(i==0) src=1;
	        vis[i]= true;
	        dfs(src,cnt,gr,vis);
	        
	       // cout<<i<<" "<<cnt<<" "<<src<<"\n";
	        if(cnt!=n-1) {
	            flag = false;
	            break;
	        }
	    }
	    cout<<flag<<"\n";
	
	}
	return 0;
}
