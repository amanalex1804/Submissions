#include<bits/stdc++.h>
using namespace std;
int dp[32][11][32][2];
int fn(int idx,int left,int last,int trans,int n,int A[]){
    if(idx>n) return 0;
    int &ret = dp[idx][left][last][trans];
    if(ret!=-1) return ret;
    int p = 0;
    p = fn(idx+1,left,last,trans,n,A);
    if(trans){
        if(A[idx]>=A[last]) p = max(p,fn(idx+1,left,0,0,n,A)+(A[idx]-A[last]));
    }else{
        if(left>0){
            p = max(p,fn(idx+1,left-1,idx,1,n,A));
        }
    }
    return ret = p;
}

int main()
 {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
	int t;
	cin>>t;

	while(t--){
	    int k;cin>>k;
	    int n;cin>>n;
	    int A[n+1];
	    A[0]=INT_MIN;
	    for(int i=1;i<=n;++i) cin>>A[i];
	    
	    for(int i=0;i<=n;++i)
	    for(int j=0;j<=k;++j)
	    for(int p=0;p<=n;++p)
	    for(int q=0;q<2;++q)
	    dp[i][j][p][q]=-1;
	    
	    cout<<fn(1,k,0,0,n,A)<<"\n";
	    
	    
	    
	
	}
	return 0;
}
