#include<bits/stdc++.h>
using namespace std;
int dp[105][105];
int fn(int idx,int left,int V[],int n){
    if(left<0) return INT_MIN;
    if(!left) return 0;
    if(idx>n) return INT_MIN ;
    
    int &ret = dp[idx][left];
    if(ret!=-1) return ret;
    return ret = max(fn(idx+1,left,V,n),max(fn(idx+1,left-idx,V,n)+V[idx],fn(idx,left-idx,V,n)+V[idx]));
}

int main()
 {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
	int t;
	cin>>t;

	while(t--){
	    
	    int n;cin>>n;
	    int V[n+1];
	    for(int i=1;i<=n;++i) cin>>V[i];
	    
	    for(int i=0;i<=n;++i)
	    for(int j=0;j<=n;++j)
	    dp[i][j] = -1;
	    
	    cout<<max(0,fn(1,n,V,n))<<"\n";
	    
	
	}
	return 0;
}
