#include<bits/stdc++.h>
using namespace std;
int dp[1001][1001];
int fn(int idx,int left,int V[],int W[],int n){
    if(left<0) return INT_MIN;
    if(left==0 or idx>=n) return 0;
    int &ret= dp[idx][left];
    if(ret!=-1) return ret;
    
    return ret = max(fn(idx+1,left,V,W,n),max(fn(idx,left-W[idx],V,W,n)+V[idx],fn(idx+1,left-W[idx],V,W,n)+V[idx]));
    
}
int main()
 {
     ios_base::sync_with_stdio(false);cin.tie(NULL);
	int t;
	cin>>t;

	while(t--){
	    int n,w; cin>>n>>w;
	    int V[n+1],W[n+1];
	    for(int i=0;i<n;++i) cin>>V[i];
	    for(int i=0;i<n;++i) cin>>W[i];
	    
	    for(int i=0;i<=n;++i)
	    for(int j=0;j<=w;++j)
	    dp[i][j]=-1;
	    
	    
	    cout<<max(0,fn(0,w,V,W,n))<<"\n";
	
	}
	return 0;
}
