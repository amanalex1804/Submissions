#include<bits/stdc++.h>
using namespace std;

// 0 means increasing 
int fn(int idx,int last,int turn,int A[],int n,int dp[][102][2]){
    if(idx>n) return 0;
    int &ret = dp[idx][last][turn];
    if(ret!=-1) return ret;
    
    int x = 0, y=0,z=0;
    
    x = fn(idx+1,last,turn,A,n,dp);
    if(turn==1){
        if(A[idx]<A[last]) y = fn(idx+1,idx,turn,A,n,dp)+1;
    }else{
        if(A[idx]>A[last]) y = fn(idx+1,idx,turn,A,n,dp)+1;
        
        if(A[last]>A[idx]) z = fn(idx+1,idx,1,A,n,dp)+1;
    }
    return ret = max(x,max(y,z));
    
}

int main()
 {
    ios_base::sync_with_stdio(false); cin.tie(NULL);
	int t;
	cin>>t;

	while(t--){
	    int n;cin>>n;
	    int A[n+1];A[0] = 0;
	    for(int i=1;i<=n;++i) cin>>A[i];
	    int dp[n+2][102][2];
	    for(int i=0;i<=n;++i)
	    for(int j=0;j<=n;++j)
	    for(int k=0;k<2;++k)
	    dp[i][j][k] = -1;
	    
	    cout<<fn(0,0,0,A,n,dp)<<"\n";
	
	}
	return 0;
}
