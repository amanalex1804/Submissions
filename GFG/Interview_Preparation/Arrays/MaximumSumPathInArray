{
#include<bits/stdc++.h>
using namespace std;
 int max_path_sum(int [], int [], int , int );
int main()
{
    int T;
    cin>>T;
    while(T--)
    {
        int N,M;
        cin>>N>>M;
        fflush(stdin);
        int a[N],b[M];
        for(int i=0;i<N;i++)
            cin>>a[i];
        for(int i=0;i<M;i++)
            cin>>b[i];
        int result = max_path_sum(a,b,N,M);
        cout<<result<<endl;
    }
}

}

/*Please note that it's Function problem i.e.
you need to write your solution in the form of Function(s) only.
Driver Code to call/invoke your function is mentioned above.*/

/*You are required to complete this method*/
 int max_path_sum(int A[], int B[], int l1, int l2)
{
    int i=0,j=0,s1=0,s2=0,ans=0;
    while(i<l1 and j<l2){
        while(i<l1 and A[i]<B[j]){
            s1+=A[i];
            ++i;
        }
        while(j<l2 and A[i]>B[j]){
            s2+=B[j];
            ++j;
        }
        while(i<l1 and j<l2 and A[i]==B[j]){
            
            ans+=max(s1,s2)+A[i];
            s1 = 0;s2 = 0;
            ++i; ++j;
        }
    }
    while(i<l1) s1+=A[i],++i;
    while(j<l2) s2+=B[j],++j;
    ans+=max(s1,s2);
    return ans;
}
