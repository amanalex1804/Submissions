
void heapify(int i,int A[],int sz){
    int l = 2*i+1;
    int r = 2*i+2;
    int smallest = i;
    if(l<sz and A[smallest]>A[l]){
        smallest = l;
    }
    if(r<sz and A[smallest]>A[r]){
        smallest = r;
    }
    if(smallest!=i){
        swap(A[smallest],A[i]);
        heapify(smallest,A,sz);
    }
    
}

int heapSort(int A[],int n,int k){
    for(int i=n/2;i>=0;--i) heapify(i,A,n);
    
    int x = 0;
    for(int i=n-1;i>=0 and k>0;--i){
        swap(A[0],A[i]);
        x=A[i];
        heapify(0,A,i);
        --k;
    }
    return x;
}

int kthSmallest(int mat[MAX][MAX], int n, int k)
{
  //Your code here
  
  int A[(n*n)],ind=0;
  
  for(int i=0;i<n;++i)
  for(int j=0;j<n;++j)
  A[ind++]=mat[i][j];
  
  return heapSort(A,n*n,k);
  
  
}
