#include<bits/stdc++.h>
using namespace std;
void heapify(int A[],int n,int i){
    int largest = i;
    int l = 2*i+1;
    int r = 2*i+2;
    
    if(l<n and A[l]<A[largest]) largest = l;
    if(r<n and A[r]<A[largest]) largest = r;
    if(i!=largest) {
        swap(A[i],A[largest]);
        heapify(A,n,largest);
    }
}

void heapSort(int A[],int n){
    
    for(int i=n/2-1;i>=0;--i) heapify(A,n,i);
    
    // for(int i=n-1;i>=0 and k>0;--i){
    //     swap(A[0],A[i]);
    //     heapify(A,i,0);
    //     --k;
    // }
    // if(k>0) cout<<-1<<" ";
    // else cout<<A[0]<<" ";

}

int main()
 {
     ios_base::sync_with_stdio(false);cin.tie(NULL);
	int t;
	cin>>t;

	while(t--){
	 int n,k;cin>>k>>n;
	 int A[n+1],B[n+2];
	 for(int i=0;i<n;++i) cin>>A[i],B[i]=-1;
	 B[n+1]=-1;
	 int ind = 0;
	 for(int i=0;i<k;++i) B[i] = A[i];
	 heapSort(B,k);
	 for(int i=0;i<k-1;++i) cout<<-1<<" ";
	 cout<<B[0]<<" ";
	 
	 for(int i=k;i<n;++i){
	     if(A[i]<=B[0]) cout<<B[0]<<" ";
	     else{
	         B[0]=A[i];
	         heapify(B,k,0);
	         cout<<B[0]<<" ";
	     }
	   
	 }
	 cout<<"\n";
	}
	return 0;
}
