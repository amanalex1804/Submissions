
int maxPalindrome(Node *head)
{
    Node *root=NULL,*tail=NULL;
    Node *cur = head;
    //vector<int>V,v;
    int V[1005],v[1005],p=0;
    while(cur){
        V[p++]=cur->data;
        cur = cur->next;
    }
    int l=0;
    v[l++]=-2;
    for(int i=0;i<p;++i) {v[l++]=-3;v[l++]=V[i];}
    v[l++]=-3;
    v[l++]=-1;
    int P[l+10];
    for(int i=0;i<=l+9;++i) P[i]=0;
    int c=0,r=0,ans=0;
    for(int i=1;i<l-1;++i){
    
        int mirr = 2*c-i;
        if(i>r) P[i]=min(i-r,P[mirr]);
        while(v[i+P[i]+1]==v[i-P[i]-1]) P[i]++;
        if(i+P[i]>r){
            r=i+P[i];
            c =i;
        }
        ans = max(ans,P[i]);
    }
    return ans;
}
