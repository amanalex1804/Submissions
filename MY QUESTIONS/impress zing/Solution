#include<bits/stdc++.h>
using namespace std;
#define sz 100005
int seg[sz*4][30],lazy[sz*4],A[sz*4],l,r,ret;
 
inline void build(int node,int st,int en){
	
	if(st==en){
		seg[node][A[st]]+=1;
		return;
	}
	int mid=(st+en)/2;
	build(2*node,st,mid);
	build(2*node+1,mid+1,en);
	for(int i=0;i<29;++i) seg[node][i]=(seg[2*node][i]+seg[2*node+1][i]);
}
 
inline void upd(int node,int st,int en,int idx){
	if(r<st or en<l) return;
	
	if(lazy[node]){
    	if(st!=en){
			lazy[2*node]=lazy[node];
			lazy[2*node+1]=lazy[node];		
		}
	lazy[node]=0;
	}
	
	if(l<=st and en<=r){
		for(int i=0;i<29;++i) seg[node][i]=0;
		seg[node][idx]=(en-st+1);		
		if(st!=en){
			lazy[2*node]=idx;
			lazy[2*node+1]=idx;		
		}
		return;
	}
	int mid=(st+en)/2;
	 upd(2*node,st,mid,idx);
	 upd(2*node+1,mid+1,en,idx);
	 
	 if(st!=en){
	 for(int i=0;i<29;++i) seg[node][i]=0;
	 if(lazy[2*node]) seg[node][lazy[2*node]]=(mid-st+1);
	 else for(int i=0;i<29;++i) seg[node][i]=seg[2*node][i];
	 
	 if(lazy[2*node+1]) seg[node][lazy[2*node+1]]+=(en-mid);
	 else for(int i=0;i<29;++i) seg[node][i]+=seg[2*node+1][i];
   }
	 
	 
}
 
inline void qry(int node,int st,int en,int idx,int val){
 
	if(lazy[node]){
		for(int i=0;i<29;++i) seg[node][i]=0;
		seg[node][lazy[node]]=(en-st+1);
		if(st!=en){
			lazy[2*node]=lazy[node];
			lazy[2*node+1]=lazy[node];
		}
		lazy[node]=0;
	}
	if(seg[node][idx]<val) return;
	if(st==en) { ret=st;return;	}
	int left=0;
	int mid=(st+en)/2;
	if(lazy[2*node]){    if(lazy[2*node]==idx) left=(mid-st+1);		}
	else left=seg[2*node][idx];
	if(0<=val and val<=left) qry(2*node,st,mid,idx,val);
	else qry(2*node+1,mid+1,en,idx,val-left);
	
	
	if(st!=en){
	 for(int i=0;i<29;++i) seg[node][i]=0;
	 if(lazy[2*node]) seg[node][lazy[2*node]]=(mid-st+1);
	 else for(int i=0;i<29;++i) seg[node][i]=seg[2*node][i];
	 
	 if(lazy[2*node+1]) seg[node][lazy[2*node+1]]+=(en-mid);
	 else for(int i=0;i<29;++i) seg[node][i]+=seg[2*node+1][i];
    }
}
 
int main(){
//	freopen("in12.txt","r",stdin);
//	freopen("ou12.txt","w",stdout);
	string temp;cin>>temp;
//	cout<<temp<<"\n";
	int n=(int)temp.size();
	for(int i=1;i<=n;++i) A[i]=(int)(temp[i-1]-'a')+1;
//	cout<<"ok";
	build(1,1,n);
//	cout<<"ok";
	int q;cin>>q;
//	cout<<q<<"\n";
	while(q--){
		int typ,k;cin>>typ;
		char ch;
		if(typ==0){               // for update
			cin>>l>>r>>ch;
			upd(1,1,n,(int)(ch-'a')+1);
		
		}
		else if(typ==1){          // for query
			cin>>k>>ch;
			ret=-1;
			qry(1,1,n,(int)(ch-'a')+1,k);
			cout<<ret<<"\n";
			
		}
		
	}
	
	
	
	
	
	return 0;
} 
